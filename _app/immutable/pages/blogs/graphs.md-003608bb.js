import{S as U,i as W,s as X,l,u as o,a as h,m as a,p as f,v as _,h as s,c,M as Y,q as Q,b as r,H as p,n as I}from"../../chunks/index-d3fa6a4c.js";function Z(R){let i,d,b,m,z,x,u,B,G,v,w,j,H,E,M,P,y,N,V,A,S,q,T,C;return{c(){i=l("h1"),d=o("A few words about Graph theory"),b=h(),m=l("p"),z=o("A graph is a collection of vertices(V) or nodes(N) connected with edges (E)"),x=h(),u=l("h2"),B=o("Types of graphs"),G=h(),v=l("p"),w=l("img"),H=h(),E=l("h2"),M=o("Trees"),P=h(),y=l("p"),N=o("A graph with V-1 edges is a tree"),V=h(),A=l("h2"),S=o("Binary Trees"),q=h(),T=l("p"),C=o("A tree where each vertices has zero or two children"),this.h()},l(e){i=a(e,"H1",{});var t=f(i);d=_(t,"A few words about Graph theory"),t.forEach(s),b=c(e),m=a(e,"P",{});var k=f(m);z=_(k,"A graph is a collection of vertices(V) or nodes(N) connected with edges (E)"),k.forEach(s),x=c(e),u=a(e,"H2",{});var D=f(u);B=_(D,"Types of graphs"),D.forEach(s),G=c(e),v=a(e,"P",{});var F=f(v);w=a(F,"IMG",{src:!0,alt:!0}),F.forEach(s),H=c(e),E=a(e,"H2",{});var J=f(E);M=_(J,"Trees"),J.forEach(s),P=c(e),y=a(e,"P",{});var K=f(y);N=_(K,"A graph with V-1 edges is a tree"),K.forEach(s),V=c(e),A=a(e,"H2",{});var L=f(A);S=_(L,"Binary Trees"),L.forEach(s),q=c(e),T=a(e,"P",{});var O=f(T);C=_(O,"A tree where each vertices has zero or two children"),O.forEach(s),this.h()},h(){Y(w.src,j="/graphs.svg")||Q(w,"src",j),Q(w,"alt","image")},m(e,t){r(e,i,t),p(i,d),r(e,b,t),r(e,m,t),p(m,z),r(e,x,t),r(e,u,t),p(u,B),r(e,G,t),r(e,v,t),p(v,w),r(e,H,t),r(e,E,t),p(E,M),r(e,P,t),r(e,y,t),p(y,N),r(e,V,t),r(e,A,t),p(A,S),r(e,q,t),r(e,T,t),p(T,C)},p:I,i:I,o:I,d(e){e&&s(i),e&&s(b),e&&s(m),e&&s(x),e&&s(u),e&&s(G),e&&s(v),e&&s(H),e&&s(E),e&&s(P),e&&s(y),e&&s(V),e&&s(A),e&&s(q),e&&s(T)}}}const n={title:"A few words about Graph theory",tags:["blog"]};class g extends U{constructor(i){super(),W(this,i,null,Z,X,{})}}export{g as default,n as metadata};
