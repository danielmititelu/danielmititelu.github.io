import{S as R,i as U,s as W,l,u as o,a as h,m as a,p,v as _,h as s,c,M as X,q as O,b as r,F as f,n as C}from"../../../chunks/index-a3d3ad5c.js";function Y(Q){let i,d,T,u,z,b,v,B,x,m,w,F,H,E,M,P,y,N,V,A,S,q,G,n;return{c(){i=l("h1"),d=o("A few words about Graph theory"),T=h(),u=l("p"),z=o("A graph is a collection of vertices(V) or nodes(N) connected with edges (E)"),b=h(),v=l("h2"),B=o("Types of graphs"),x=h(),m=l("p"),w=l("img"),H=h(),E=l("h2"),M=o("Trees"),P=h(),y=l("p"),N=o("A graph with V-1 edges is a tree"),V=h(),A=l("h2"),S=o("Binary Trees"),q=h(),G=l("p"),n=o("A tree where each vertices has zero or two children"),this.h()},l(e){i=a(e,"H1",{});var t=p(i);d=_(t,"A few words about Graph theory"),t.forEach(s),T=c(e),u=a(e,"P",{});var I=p(u);z=_(I,"A graph is a collection of vertices(V) or nodes(N) connected with edges (E)"),I.forEach(s),b=c(e),v=a(e,"H2",{});var j=p(v);B=_(j,"Types of graphs"),j.forEach(s),x=c(e),m=a(e,"P",{});var k=p(m);w=a(k,"IMG",{src:!0,alt:!0}),k.forEach(s),H=c(e),E=a(e,"H2",{});var D=p(E);M=_(D,"Trees"),D.forEach(s),P=c(e),y=a(e,"P",{});var J=p(y);N=_(J,"A graph with V-1 edges is a tree"),J.forEach(s),V=c(e),A=a(e,"H2",{});var K=p(A);S=_(K,"Binary Trees"),K.forEach(s),q=c(e),G=a(e,"P",{});var L=p(G);n=_(L,"A tree where each vertices has zero or two children"),L.forEach(s),this.h()},h(){X(w.src,F="/graphs.svg")||O(w,"src",F),O(w,"alt","Graph representation")},m(e,t){r(e,i,t),f(i,d),r(e,T,t),r(e,u,t),f(u,z),r(e,b,t),r(e,v,t),f(v,B),r(e,x,t),r(e,m,t),f(m,w),r(e,H,t),r(e,E,t),f(E,M),r(e,P,t),r(e,y,t),f(y,N),r(e,V,t),r(e,A,t),f(A,S),r(e,q,t),r(e,G,t),f(G,n)},p:C,i:C,o:C,d(e){e&&s(i),e&&s(T),e&&s(u),e&&s(b),e&&s(v),e&&s(x),e&&s(m),e&&s(H),e&&s(E),e&&s(P),e&&s(y),e&&s(V),e&&s(A),e&&s(q),e&&s(G)}}}const $={title:"A few words about Graph theory",tags:["blog"]};class g extends R{constructor(i){super(),U(this,i,null,Y,W,{})}}export{g as default,$ as metadata};
