import{S as U,i as W,s as X,e as l,t as o,k as h,c as i,a as f,h as _,d as s,m as c,M as Y,b as Q,g as r,F as p,G as C}from"../../chunks/vendor-cac58433.js";function Z(R){let a,q,T,m,z,x,u,B,b,v,w,F,H,E,M,P,y,N,V,A,S,d,G,k;return{c(){a=l("h1"),q=o("A few words about Graph theory"),T=h(),m=l("p"),z=o("A graph is a collection of vertices(V) or nodes(N) connected with edges (E)"),x=h(),u=l("h2"),B=o("Types of graphs"),b=h(),v=l("p"),w=l("img"),H=h(),E=l("h2"),M=o("Trees"),P=h(),y=l("p"),N=o("A graph with V-1 edges is a tree"),V=h(),A=l("h2"),S=o("Binary Trees"),d=h(),G=l("p"),k=o("A tree where each vertices has zero or two children"),this.h()},l(e){a=i(e,"H1",{});var t=f(a);q=_(t,"A few words about Graph theory"),t.forEach(s),T=c(e),m=i(e,"P",{});var I=f(m);z=_(I,"A graph is a collection of vertices(V) or nodes(N) connected with edges (E)"),I.forEach(s),x=c(e),u=i(e,"H2",{});var j=f(u);B=_(j,"Types of graphs"),j.forEach(s),b=c(e),v=i(e,"P",{});var D=f(v);w=i(D,"IMG",{src:!0,alt:!0}),D.forEach(s),H=c(e),E=i(e,"H2",{});var J=f(E);M=_(J,"Trees"),J.forEach(s),P=c(e),y=i(e,"P",{});var K=f(y);N=_(K,"A graph with V-1 edges is a tree"),K.forEach(s),V=c(e),A=i(e,"H2",{});var L=f(A);S=_(L,"Binary Trees"),L.forEach(s),d=c(e),G=i(e,"P",{});var O=f(G);k=_(O,"A tree where each vertices has zero or two children"),O.forEach(s),this.h()},h(){Y(w.src,F="/graphs.svg")||Q(w,"src",F),Q(w,"alt","image")},m(e,t){r(e,a,t),p(a,q),r(e,T,t),r(e,m,t),p(m,z),r(e,x,t),r(e,u,t),p(u,B),r(e,b,t),r(e,v,t),p(v,w),r(e,H,t),r(e,E,t),p(E,M),r(e,P,t),r(e,y,t),p(y,N),r(e,V,t),r(e,A,t),p(A,S),r(e,d,t),r(e,G,t),p(G,k)},p:C,i:C,o:C,d(e){e&&s(a),e&&s(T),e&&s(m),e&&s(x),e&&s(u),e&&s(b),e&&s(v),e&&s(H),e&&s(E),e&&s(P),e&&s(y),e&&s(V),e&&s(A),e&&s(d),e&&s(G)}}}const n={title:"A few words about Graph theory"};class g extends U{constructor(a){super();W(this,a,null,Z,X,{})}}export{g as default,n as metadata};
