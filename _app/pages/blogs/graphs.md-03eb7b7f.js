import{S as U,i as W,s as X,e as l,t as o,k as h,c as a,a as f,h as _,d as s,m as c,F as Y,b as Q,g as r,J as p,G as F}from"../../chunks/vendor-a21aee19.js";function Z(R){let i,q,T,m,z,b,u,B,x,v,w,I,H,E,N,P,y,S,V,A,k,d,G,C;return{c(){i=l("h1"),q=o("A few words about Graph theory"),T=h(),m=l("p"),z=o("A graph is a collection of vertices(V) or nodes(N) connected with edges (E)"),b=h(),u=l("h2"),B=o("Types of graphs"),x=h(),v=l("p"),w=l("img"),H=h(),E=l("h2"),N=o("Trees"),P=h(),y=l("p"),S=o("A graph with V-1 edges is a tree"),V=h(),A=l("h2"),k=o("Binary Trees"),d=h(),G=l("p"),C=o("A tree where each vertices has zero or two children"),this.h()},l(e){i=a(e,"H1",{});var t=f(i);q=_(t,"A few words about Graph theory"),t.forEach(s),T=c(e),m=a(e,"P",{});var J=f(m);z=_(J,"A graph is a collection of vertices(V) or nodes(N) connected with edges (E)"),J.forEach(s),b=c(e),u=a(e,"H2",{});var M=f(u);B=_(M,"Types of graphs"),M.forEach(s),x=c(e),v=a(e,"P",{});var j=f(v);w=a(j,"IMG",{src:!0,alt:!0}),j.forEach(s),H=c(e),E=a(e,"H2",{});var D=f(E);N=_(D,"Trees"),D.forEach(s),P=c(e),y=a(e,"P",{});var K=f(y);S=_(K,"A graph with V-1 edges is a tree"),K.forEach(s),V=c(e),A=a(e,"H2",{});var L=f(A);k=_(L,"Binary Trees"),L.forEach(s),d=c(e),G=a(e,"P",{});var O=f(G);C=_(O,"A tree where each vertices has zero or two children"),O.forEach(s),this.h()},h(){Y(w.src,I="/graphs.svg")||Q(w,"src",I),Q(w,"alt","image")},m(e,t){r(e,i,t),p(i,q),r(e,T,t),r(e,m,t),p(m,z),r(e,b,t),r(e,u,t),p(u,B),r(e,x,t),r(e,v,t),p(v,w),r(e,H,t),r(e,E,t),p(E,N),r(e,P,t),r(e,y,t),p(y,S),r(e,V,t),r(e,A,t),p(A,k),r(e,d,t),r(e,G,t),p(G,C)},p:F,i:F,o:F,d(e){e&&s(i),e&&s(T),e&&s(m),e&&s(b),e&&s(u),e&&s(x),e&&s(v),e&&s(H),e&&s(E),e&&s(P),e&&s(y),e&&s(V),e&&s(A),e&&s(d),e&&s(G)}}}const n={title:"A few words about Graph theory",tags:["blog"]};class g extends U{constructor(i){super();W(this,i,null,Z,X,{})}}export{g as default,n as metadata};
